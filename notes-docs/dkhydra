version: '3'

networks:
  hydraguide:
    external: true


services:

  hydra:
    image: oryd/hydra:v1.7.4
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command:
      serve all --dangerous-force-http
    environment:
      - URLS_SELF_ISSUER=http://127.0.0.1:4444
      - URLS_CONSENT=http://127.0.0.1:3000/consent
      - URLS_LOGIN=http://127.0.0.1:3000/login
      - URLS_LOGOUT=http://127.0.0.1:3000/logout
      - DSN=memory
      - SECRETS_SYSTEM=youReallyNeedToChangeThis
      - OIDC_SUBJECT_IDENTIFIERS_SUPPORTED_TYPES=public,pairwise
      - OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT=youReallyNeedToChangeThis
      - SERVE_COOKIES_SAME_SITE_MODE=Lax
    restart: unless-stopped

  consent:
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
    image: oryd/hydra-login-consent-node:v1.5.2
    ports:
      - "3000:3000"
    restart: unless-stopped

  server:
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    networks:
      - hydraguide
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8080:3000"
      - "2228:22"

      
     
docker-compose -f hydrastart.yml \
    -f hydrastart-postgres.yml \
    up --build      
    
 
docker-compose -f hydrastart.yml exec hydra \
    hydra clients create \
    --endpoint http://127.0.0.1:4445/ \
    --id my-client \
    --secret secret \
    -g client_credentials 
    
sudo docker-compose -f hydrastart.yml exec hydra \
    hydra token client \
    --endpoint http://127.0.0.1:4444/ \
    --client-id my-client \
    --client-secret secret 


docker-compose -f hydrastart.yml exec hydra \
    hydra token introspect \
    --endpoint http://127.0.0.1:4445/ chkf7qH70Ts-Q6H7_1uqP3NYRqdHK_BG17Vh8ZaxZF0.vd73Rc1SM4OdNGAqeZJV9T7BrjFMHi85AZW9Rkg12gw




docker-compose -f hydrastart.yml exec hydra \
    hydra clients create \
    --endpoint http://127.0.0.1:4445 \
    --id auth-code-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token \
    --scope openid,offline \
    --callbacks http://brucebanner:5555/callback
    
    		-------	or -----
    		
docker-compose -f hydrastart.yml exec hydra \
    hydra clients create \
    --endpoint http://127.0.0.1:4445 \
    --id gitea-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token \
    --scope openid,offline \
    --callbacks http://127.0.0.1:8000/user/oauth2/ORY_Hydra/callback
    
          
docker-compose -f hydrastart.yml exec hydra \
    hydra token user \
    --client-id gitea-client \
    --client-secret secret \
    --endpoint http://127.0.0.1:4444/ \
    --port 5555 \
    --scope openid,offline


--auth-url http://127.0.0.1:4444/oauth2/auth \
	--token-url http://hydra:4444/oauth2/token \
--redirect http://127.0.0.1:8080/user/oauth2/callback \

authjorization url
http://127.0.0.1:8080/login/oauth2/authorize

--redirect http://127.0.0.1:8000/user/oauth2/hey/callback \
http://mgmt.example.com/git/user/oauth2/github(name you given)/callback
callback -- http://127.0.0.1:8080/user/oauth2/openid/callback

debugging---   
    docker-compose -f hydrastart.yml exec hydra \
    hydra clients get \
    --endpoint http://hydra:4445/  auth-code-client \     

well-kniown url
	http://127.0.0.1:4444/.well-known/openid-configuration

 
debug  -- change callback also with hostname 


docker-compose -f hydrastart.yml exec hydra \
    hydra token user --help\
    
    
    
    
docker-compose -f hydrastart.yml exec hydra \
    hydra clients create \
    --endpoint http://127.0.0.1:4445 \
    --id my-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token,email \
    --scope openid,offline_access,profile,email \
    --callbacks http://gitea.example.com:8000/users/auth/ORY_Hydra/callback \
    --token-endpoint-auth-method client_secret_post    
    
    
    
    
    zsh
sublime
12factor.net

token baba token 8a0514088d55836fa545664dc639e7456e57fee3

 git 
 github   
    
    
    hydra clients create \
    --endpoint http://127.0.0.1:4445 \
    --id gitea-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token \
    --scope openid,offline \
    --callbacks http://127.0.0.1:8000/user/oauth2/ORY_Hydra/callback \
    --token-endpoint-auth-method client_secret_post
    
    docker-compose -f hydrastart.yml exec hydra \
    hydra clients create \
    --endpoint http://127.0.0.1:4445 \
    --id gitea-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token \
    --scope openid,offline \
    --callbacks http://127.0.0.1:8000/user/oauth2/ORY_Hydra/callback \
    --token-endpoint-auth-method client_secret_post


nginx configs

https://gist.github.com/soheilhy/8b94347ff8336d971ad0

unlink /etc/nginx/conf.d/app.conf 
ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/reverse-proxy.conf   ## set symbolic link to the conf file
# service nginx configtest
# service nginx restart

sudo nginx -c conf -t 

hydrastart line 24 serve all --dangerous-allow-insecure-redirect-urls http://gitea.example.dk/user/oauth2/ORY_Hydra/callback

docker-compose -f hydrastart.yml \
    -f hydrastart-postgres.yml \
    up --build 
    
docker-compose -f hydrastart.yml exec hydra \
    hydra clients create  \
    --endpoint http://hydra:4445 \
    --id gitea-client \
    --secret secret \
    --grant-types authorization_code,refresh_token \
    --response-types code,id_token \
    --scope openid,offline \
    --callbacks http://gitea.localhost/user/oauth2/ORY_Hydra/callback
    
    
          
docker-compose -f hydrastart.yml exec hydra \
    hydra token user \
    --client-id gitea-client \
    --client-secret secret \
    --endpoint http://hydra:4444/ \
    --port 5555 \
    --scope openid,offline 
    
    
    \
    --auth-url http://hydra.localhost/oauth2/auth \
	  --token-url http://hydra:4444/oauth2/token 
    

docker exec -it (gitea id) bash

gitea manager logging add console --stderr --flags stdflags file

gitea manager logging add console enable_access_log --stderr --flags stdflags file




kubernetes:


kubernetes apis
how many types and what they do

cat > kubernetes.default.svc.cluster.local <<EOF
server {
  listen      80;
  server_name kubernetes.default.svc.cluster.local;

  location /healthz {
     proxy_pass                    https://127.0.0.1:6443/healthz;
     proxy_ssl_trusted_certificate /var/lib/kubernetes/ca.pem;
  }
}
EOF
{
  sudo mv kubernetes.default.svc.cluster.local \
    /etc/nginx/sites-available/kubernetes.default.svc.cluster.local

  sudo ln -s /etc/nginx/sites-available/kubernetes.default.svc.cluster.local /etc/nginx/sites-enabled/
}


Start the Kubernetes Proxy:
$ kubectl proxy --port=8080
Now, you can navigate through the Kubernetes API to access this service using this scheme:
http://localhost:8080/api/v1/proxy/namespaces/<NAMESPACE>/services/<SERVICE-NAME>:<PORT-NAME>/
So to access the service we defined above, you could use the following address:
http://localhost:8080/api/v1/proxy/namespaces/default/services/my-internal-service:http/


volumes 
configmap
secret
rbac
role binding


=====================  kubernetes ==========================

dns for any service name my-svc is my-svc.my-namespace.svczone

my-svc.my-namespace.svc.cluster-domain.example

